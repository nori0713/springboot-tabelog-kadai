package com.example.nagoyameshi.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.example.nagoyameshi.form.SignupForm;
import com.example.nagoyameshi.service.UserService;

@Controller
public class AuthController {
	private final UserService userService;

	public AuthController(UserService userService) {
		this.userService = userService;
	}

	@GetMapping("/login")
	public String login(Model model) {
		// フラッシュメッセージがあれば、モデルに追加する
		if (model.containsAttribute("successMessage")) {
			model.addAttribute("successMessage", model.getAttribute("successMessage"));
		}
		return "auth/login";
	}

	@GetMapping("/signup")
	public String signup(Model model) {
		model.addAttribute("signupForm", new SignupForm());
		return "auth/signup";
	}

	@PostMapping("/signup")
	public String signup(@ModelAttribute @Validated SignupForm signupForm, BindingResult bindingResult,
			RedirectAttributes redirectAttributes) {
		// パスワードと確認用パスワードの一致をチェック
		if (!signupForm.getPassword().equals(signupForm.getPasswordConfirmation())) {
			FieldError passwordError = new FieldError(bindingResult.getObjectName(), "passwordConfirmation",
					"パスワードが一致しません。");
			bindingResult.addError(passwordError);
		}

		// メールアドレスが既に登録されているかどうかをチェック
		if (userService.isEmailRegistered(signupForm.getEmail())) {
			FieldError emailError = new FieldError(bindingResult.getObjectName(), "email", "このメールアドレスは既に登録されています。");
			bindingResult.addError(emailError);
		}

		if (bindingResult.hasErrors()) {
			return "auth/signup";
		}

		userService.create(signupForm);
		redirectAttributes.addFlashAttribute("successMessage", "会員登録が完了しました。");

		return "redirect:/login";
	}

}
